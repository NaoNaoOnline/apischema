syntax = "proto3";

package event;
option go_package = "./;event";

// SearchI is the input for searching events.
//
//     {
//         "filter": [
//             "chunking": {
//                 "perpage": "50",
//                 "pointer": "100"
//             }
//         ],
//         "object": [
//             {
//                 "public": {
//                     "cate": "863826"
//                 }
//             }
//         ]
//     }
//
message SearchI {
  SearchI_Filter filter = 100;
  repeated SearchI_Object object = 200;
}

message SearchI_Filter {
  SearchI_Filter_Chunking chunking = 100;
}

message SearchI_Filter_Chunking {
  string perpage = 100;
  string pointer = 200;
}

message SearchI_Object {
  SearchI_Object_Intern intern = 100;
  SearchI_Object_Public public = 200;
}

message SearchI_Object_Intern {
  // evnt is the ID of the event being searched. If searching for a particular
  // event, the search query object must neither contain cate or host.
  string evnt = 100;
}

message SearchI_Object_Public {
  // cate is the ID of the category label for which events are being searched.
  string cate = 100;
  // host is the ID of the host label for which events are being searched.
  string host = 200;
}

// SearchO is the output for searching events.
//
//     {
//         "filter": [
//             "chunking": {
//                 "perpage": "50",
//                 "pointer": "150"
//             }
//         ],
//         "object": [
//             {
//                 "intern": {
//                     "crtd": "1689001255",
//                     "evnt": "778237",
//                     "user": "551265"
//                 },
//                 "public": {
//                     "cate": "863826",
//                     "dura": "3600",
//                     "host": "551265",
//                     "link": "https://google.com",
//                     "time": "1689001255"
//                 }
//             },
//             ...
//         ]
//     }
//
message SearchO {
  SearchO_Filter filter = 100;
  repeated SearchO_Object object = 200;
}

message SearchO_Filter {}

message SearchO_Object {
  SearchO_Object_Intern intern = 100;
  SearchO_Object_Public public = 200;
}

message SearchO_Object_Intern {
  // crtd is the unix timestamp in seconds at which the event got created.
  string crtd = 100;
  // evnt is the ID of the event being searched.
  string evnt = 200;
  // user is the ID of the user who created this event.
  string user = 300;
}

message SearchO_Object_Public {
  // cate is the comma separated list of label IDs under which the event is
  // categorized.
  string cate = 100;
  // dura is the estimated duration of the event in seconds.
  string dura = 200;
  // host is the internal host ID expected to host the event.
  string host = 300;
  // link is the online location at which the event is expected to take place.
  // For IRL events this may just be some informational website.
  string link = 400;
  // time is the unix timestamp in seconds at which the event is expected to
  // start.
  string time = 500;
}
