syntax = "proto3";

package event;
option go_package = "./;event";

// CreateI is the input for creating events.
//
//     {
//         "object": [
//             {
//                 "public": {
//                     "dura": "3600",
//                     "host": "551265",
//                     "labl": "863826",
//                     "link": "https://google.com",
//                     "time": "1689001255",
//                     "user": "551265"
//                 }
//             }
//         ]
//     }
//
message CreateI {
  CreateI_Filter filter = 1;
  repeated CreateI_Object object = 2;
}

message CreateI_Filter {}

message CreateI_Object {
  map<string, string> intern = 1;
  CreateI_Object_Public public = 2;
}

message CreateI_Object_Public {
  // dura is the estimated duration of the scheduled event.
  string dura = 1;
  // host is the internal host ID expected to host the scheduled event.
  string host = 2;
  // labl is the label ID under which the scheduled event is categorized.
  string labl = 3;
  // link is the online location at which the scheduled event is expected to
  // take place. For IRL events this may just be some informational website.
  string link = 4;
  // time is the unix timestamp in seconds at which the scheduled event is
  // expected to start.
  string time = 5;
  // user is the user ID creating this scheduled event. Effectively hosts may be
  // the very users creating their own events within NaoNao. Regardless anyone
  // should be able to create scheduled events for any host.
  string user = 6;
}

// CreateO is the output for creating events.
//
//     {
//         "object": [
//             {
//                 "intern": {
//                     "event.naonao.online/id": "<id>",
//                     "event.naonao.online/created": "<unix>"
//                 }
//             }
//         ]
//     }
//
message CreateO {
  CreateO_Filter filter = 1;
  repeated CreateO_Object object = 2;
}

message CreateO_Filter {}

message CreateO_Object {
  map<string, string> intern = 1;
  CreateO_Object_Public public = 2;
}

message CreateO_Object_Public {}
