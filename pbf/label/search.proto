syntax = "proto3";

package label;
option go_package = "./;label";

// SearchI is the input for searching labels.
//
//     {
//         "filter": [
//             "chunking": {
//                 "perpage": "50",
//                 "pointer": "100"
//             }
//         ],
//         "object": [
//             {
//                 "public": {
//                     "kind": "host"
//                 }
//             }
//         ]
//     }
//
message SearchI {
  SearchI_Filter filter = 100;
  repeated SearchI_Object object = 200;
}

message SearchI_Filter {
  SearchI_Filter_Chunking chunking = 100;
}

message SearchI_Filter_Chunking {
  string perpage = 100;
  string pointer = 200;
}

message SearchI_Object {
  SearchI_Object_Intern intern = 100;
  SearchI_Object_Public public = 200;
}

message SearchI_Object_Intern {
  // labl is the ID of the label being searched.
  string labl = 100;
}

message SearchI_Object_Public {
  // kind is the label type for which events are being searched, e.g. host for
  // host labels and cate for category labels.
  string kind = 100;
}

// SearchO is the output for searching labels.
//
//     {
//         "filter": [
//             "chunking": {
//                 "perpage": "50",
//                 "pointer": "150"
//             }
//         ],
//         "object": [
//             {
//                 "intern": {
//                     "crtd": "1689001255",
//                     "labl": "863826",
//                     "user": "551265"
//                 },
//                 "public": {
//                     "desc": "Flashbots researches implications of MEV",
//                     "disc": "https://discord.gg/Flashbots",
//                     "kind": "host",
//                     "name": "Flashbots",
//                     "twit": "https://twitter.com/Flashbots"
//                 }
//             },
//             ...
//         ]
//     }
//
message SearchO {
  SearchO_Filter filter = 100;
  repeated SearchO_Object object = 200;
}

message SearchO_Filter {}

message SearchO_Object {
  SearchO_Object_Intern intern = 100;
  SearchO_Object_Public public = 200;
}

message SearchO_Object_Intern {
  // bltn expresses whether this label is natively supported by the system.
  bool bltn = 100;
  // crtd is the unix timestamp in seconds at which the label got created.
  string crtd = 200;
  // labl is the ID of the label being searched.
  string labl = 300;
  // user is the ID of the user who created this label.
  string user = 400;
}

message SearchO_Object_Public {
  // desc is the label's description.
  string desc = 100;
  // disc is the label's Discord link.
  string disc = 200;
  // kind is the label type, e.g. host for host labels and cate for category
  // labels.
  string kind = 300;
  // name is the label name.
  string name = 400;
  // twit is the label's Twitter link.
  string twit = 500;
}
