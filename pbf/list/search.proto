syntax = "proto3";

package list;
option go_package = "./;list";

// SearchI is the input for searching lists. Note that search queries for lists
// must be authenticated. Also note that search queries for lists are scoped to
// the calling user. That is, the caller can only ever search for their own
// lists.
//
//     {
//         "filter": {
//             "paging": {
//                 "kind": "page",
//                 "strt": "0",
//                 "stop": "49"
//             }
//         },
//         "object": [
//             {
//                 "intern": {
//                     "user": "551265"
//                 }
//             }
//         ]
//     }
//
message SearchI {
  SearchI_Filter filter = 100;
  repeated SearchI_Object object = 200;
}

message SearchI_Filter {
  SearchI_Filter_Paging paging = 100;
}

message SearchI_Filter_Paging {
  string kind = 100;
  string strt = 200;
  string stop = 300;
}

message SearchI_Object {
  SearchI_Object_Intern intern = 100;
  SearchI_Object_Public public = 200;
}

message SearchI_Object_Intern {
  // user is the ID of the user having created the lists being searched. If
  // searching for lists created by a particular user, the search query object
  // must not contain any other fields.
  string user = 100;
}

message SearchI_Object_Public {}

// SearchO is the output for searching lists.
//
//     {
//         "object": [
//             {
//                 "intern": {
//                     "crtd": "1689001255",
//                     "feed": {
//                         "time": "1695326765"
//                     },
//                     "list": "986763351",
//                     "user": "551265"
//                 },
//                 "public": {
//                     "desc": "where CT personalities meet",
//                     "feed": "1695326765"
//                 }
//             },
//             ...
//         ]
//     }
//
message SearchO {
  SearchO_Filter filter = 100;
  repeated SearchO_Object object = 200;
}

message SearchO_Filter {}

message SearchO_Object {
  SearchO_Object_Intern intern = 100;
  SearchO_Object_Public public = 200;
}

message SearchO_Object_Intern {
  // crtd is the unix timestamp in seconds at which the list got created.
  string crtd = 100;
  // feed contains lifecycle metadata for this list object.
  SearchO_Object_Intern_Feed feed = 200;
  // list is the ID of the list being searched.
  string list = 300;
  // user is the ID of the user who created this list.
  string user = 400;
}

message SearchO_Object_Intern_Feed {
  // Time is the unix timestamp in seconds of the most recent time at which this
  // list's notification timestamp got updated.
  string time = 100;
}

message SearchO_Object_Public {
  // desc is the list's description.
  string desc = 100;
  // feed is the unix timestamp in seconds at which the user consumed this list
  // most recently. The delta between feed and the current time can be used to
  // fetch the delta of event objects that the user has not seen yet in this
  // list. This way clients display notifications for users in a pull based
  // system.
  string feed = 200;
}
