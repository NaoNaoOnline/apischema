syntax = "proto3";

package policy;
option go_package = "./;policy";

// UpdateI is the input for updating policies.
//
//     {
//         "object": [
//             {
//                 "symbol": {
//                     "sync": "default"
//                 }
//             }
//         ]
//     }
//
message UpdateI {
  UpdateI_Filter filter = 100;
  repeated UpdateI_Object object = 200;
}

message UpdateI_Filter {}

message UpdateI_Object {
  UpdateI_Object_Intern intern = 100;
  UpdateI_Object_Public public = 200;
  UpdateI_Object_Symbol symbol = 300;
  repeated UpdateI_Object_Update update = 400;
}

message UpdateI_Object_Intern {}

message UpdateI_Object_Public {}

message UpdateI_Object_Symbol {
  // sync set to "default" starts a background process to synchronize onchain
  // and offchain state. That way the current state can be fetched on demand by
  // policy members without having to wait for the scheduled background job to
  // be triggered.
  string sync = 100;
}

message UpdateI_Object_Update {}

// UpdateO is the output for updating policies.
//
//     {
//         "object": [
//             {
//                 "intern": {
//                     "stts": "started"
//                 }
//             }
//         ]
//     }
//
message UpdateO {
  UpdateO_Filter filter = 100;
  repeated UpdateO_Object object = 200;
}

message UpdateO_Filter {}

message UpdateO_Object {
  UpdateO_Object_Intern intern = 100;
  UpdateO_Object_Public public = 200;
}

message UpdateO_Object_Intern {
  // stts is the resource status upon successful policy modification.
  string stts = 100;
}

message UpdateO_Object_Public {}
