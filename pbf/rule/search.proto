syntax = "proto3";

package rule;
option go_package = "./;rule";

// SearchI is the input for searching rules. Note that search queries for rules
// must be authenticated. Also note that search queries for rules are scoped to
// the calling user. That is, the caller can only ever search for their own
// rules.
//
//     {
//         "filter": {
//             "paging": {
//                 "kind": "page",
//                 "strt": "0",
//                 "stop": "49"
//             }
//         },
//         "object": [
//             {
//                 "public": {
//                     "list": "986763351"
//                 }
//             }
//         ]
//     }
//
message SearchI {
  SearchI_Filter filter = 100;
  repeated SearchI_Object object = 200;
}

message SearchI_Filter {
  SearchI_Filter_Paging paging = 100;
}

message SearchI_Filter_Paging {
  string kind = 100;
  string strt = 200;
  string stop = 300;
}

message SearchI_Object {
  SearchI_Object_Intern intern = 100;
  SearchI_Object_Public public = 200;
}

message SearchI_Object_Intern {}

message SearchI_Object_Public {
  // list is the ID of the list for which to search all associated rules.
  string list = 100;
}

// SearchO is the output for searching rules.
//
//     {
//         "object": [
//             {
//                 "intern": {
//                     "crtd": "1689001255",
//                     "rule": "21371336",
//                     "user": "551265"
//                 },
//                 "public": {
//                     "incl": "863826",
//                     "kind": "host",
//                     "list": "986763351"
//                 }
//             },
//             ...
//         ]
//     }
//
message SearchO {
  SearchO_Filter filter = 100;
  repeated SearchO_Object object = 200;
}

message SearchO_Filter {}

message SearchO_Object {
  SearchO_Object_Intern intern = 100;
  SearchO_Object_Public public = 200;
}

message SearchO_Object_Intern {
  // crtd is the unix timestamp in seconds at which the rule got created.
  string crtd = 100;
  // rule is the ID of the rule being searched.
  string rule = 200;
  // user is the ID of the user who created this rule.
  string user = 300;
}

message SearchO_Object_Public {
  // excl is the rule's object ID to remove from the associated list, if any.
  string excl = 100;
  // incl is the rule's object ID to add to the associated list, if any.
  string incl = 200;
  // kind is the rule's object type defining the resource for included and
  // excluded object IDs. kind set to "host" includes and excludes the
  // respective host label IDs when computing the associated list.
  //
  //     cate for adding or removing events matching the given category IDs
  //     evnt for adding or removing events matching the given event IDs
  //     host for adding or removing events matching the given host IDs
  //     user for adding or removing events created by the given user IDs
  //
  string kind = 300;
  // list is the list ID this rule is mapped to.
  string list = 400;
}
